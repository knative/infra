org: knative-extensions
repo: eventing-kafka-broker
branches: [main]
image: us-docker.pkg.dev/knative-tests/images/prow-tests:v20230926-747f2d836

jobs:
  - name: build-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --build-tests]
    excluded_requirements: [gcp]

  - name: unit-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --unit-tests]
    excluded_requirements: [gcp]

  - name: integration-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --integration-tests]
    requirements: [docker]
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: upgrade-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/upgrade-tests.sh"]
    requirements: [docker]
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: reconciler-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh"]
    requirements: [docker]
    env:
      - name: BROKER_CLASS
        value: Kafka
  
  - name: reconciler-tests-loom
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh"]
    requirements: [docker]
    modifiers: [presubmit_optional, presubmit_skipped]
    env:
      - name: BROKER_CLASS
        value: Kafka
      - name: USE_LOOM
        value: "true"

  - name: reconciler-tests-namespaced-broker
    types: [ presubmit ]
    command: [ runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh" ]
    requirements: [ docker ]
    env:
      - name: BROKER_CLASS
        value: KafkaNamespaced

  - name: reconciler-tests-namespaced-broker-loom
    types: [ presubmit ]
    command: [ runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh" ]
    requirements: [ docker ]
    modifiers: [presubmit_optional, presubmit_skipped]
    env:
      - name: BROKER_CLASS
        value: KafkaNamespaced
      - name: USE_LOOM
        value: "true"

  - name: reconciler-tests-keda
    types: [ presubmit ]
    command: [ runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/keda-reconciler-tests.sh"]
    requirements: [ docker ]
    modifiers: [presubmit_optional, presubmit_skipped]
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-integration-tests-ssl
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/e2e-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-integration-tests-sasl-ssl
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/e2e-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-integration-tests-sasl-plain
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/e2e-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_PLAIN
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-reconciler-tests-ssl
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-reconciler-tests-sasl-ssl
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: channel-reconciler-tests-sasl-plain
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --run-test, "./test/reconciler-tests.sh"]
    requirements: [docker]
    env:
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_PLAIN
      - name: BROKER_CLASS
        value: Kafka

  - name: continuous
    types: [periodic]
    command: [runner.sh, ./test/presubmit-tests.sh, --all-tests]
    requirements: [docker]
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: nightly
    types: [periodic]
    command: [runner.sh, ./hack/release.sh, --publish, --tag-release]
    requirements: [nightly, docker]
    excluded_requirements: [gcp]
    max_concurrency: 1
    reporter_config:
      slack:
        channel: knative-eventing
        report_template: |
          "The nightly release job has failed, check the log: <{{.Status.URL}}|View logs>"
        job_states_to_report:
        - "failure"
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: release
    types: [periodic]
    command: [runner.sh, ./hack/release.sh, --auto-release, --release-gcs, knative-releases/eventing-kafka-broker, --release-gcr, gcr.io/knative-releases, --github-token, /etc/hub-token/token]
    requirements: [release, docker]
    excluded_requirements: [gcp]
    max_concurrency: 1
    env:
      - name: BROKER_CLASS
        value: Kafka

  - name: s390x-e2e-tests-ssl
    cron: 20 7 * * *
    types: [periodic]
    requirements: [s390x]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        mkdir -p /root/.kube
        cat /opt/cluster/ci-script > connect.sh
        chmod +x connect.sh
        ./connect.sh eventing_kafka-broker-ssl-main
        kubectl get cm s390x-config-eventing-kafka-broker -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh
        chmod +x adjust.sh
        ./adjust.sh
        ./test/e2e-tests.sh --run-tests
    env:
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: ppc64le-e2e-tests-ssl
    cron: 0 10 * * *
    types: [periodic]
    requirements: [ppc64le]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        server_vm="$(sh /opt/cluster/vm-script)"
        source /opt/cluster/ci-script "${CI_JOB}" "${server_vm}"
        ./test/e2e-tests.sh --run-tests
    env:
      - name: CI_JOB
        value: eventing_kafka-broker-ssl-main
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: s390x-e2e-tests-sasl-ssl
    cron: 20 8 * * *
    types: [periodic]
    requirements: [s390x]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        mkdir -p /root/.kube
        cat /opt/cluster/ci-script > connect.sh
        chmod +x connect.sh
        ./connect.sh eventing_kafka-broker-sasl-ssl-main
        kubectl get cm s390x-config-eventing-kafka-broker -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh
        chmod +x adjust.sh
        ./adjust.sh
        ./test/e2e-tests.sh --run-tests
    env:
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: ppc64le-e2e-tests-sasl-ssl
    cron: 20 5 * * *
    types: [periodic]
    requirements: [ppc64le]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        server_vm="$(sh /opt/cluster/vm-script)"
        source /opt/cluster/ci-script "${CI_JOB}" "${server_vm}"
        ./test/e2e-tests.sh --run-tests
    env:
      - name: CI_JOB
        value: eventing_kafka-broker-sasl-ssl-main
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_SSL
      - name: BROKER_CLASS
        value: Kafka

  - name: s390x-e2e-tests-sasl-plain
    cron: 20 9 * * *
    types: [periodic]
    requirements: [s390x]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        mkdir -p /root/.kube
        cat /opt/cluster/ci-script > connect.sh
        chmod +x connect.sh
        ./connect.sh eventing_kafka-broker-sasl-plain-main
        kubectl get cm s390x-config-eventing-kafka-broker -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh
        chmod +x adjust.sh
        ./adjust.sh
        ./test/e2e-tests.sh --run-tests
    env:
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_PLAIN
      - name: BROKER_CLASS
        value: Kafka

  - name: ppc64le-e2e-tests-sasl-plain
    cron: 0 1 * * *
    types: [periodic]
    requirements: [ppc64le]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        server_vm="$(sh /opt/cluster/vm-script)"
        source /opt/cluster/ci-script "${CI_JOB}" "${server_vm}"
        ./test/e2e-tests.sh --run-tests
    env:
      - name: CI_JOB
        value: eventing_kafka-broker-sasl-plain-main
      - name: SYSTEM_NAMESPACE
        value: knative-eventing
      - name: EVENTING_NAMESPACE
        value: knative-eventing
      - name: SCALE_CHAOSDUCK_TO_ZERO
        value: "1"
      - name: EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO
        value: SASL_PLAIN
      - name: BROKER_CLASS
        value: Kafka
